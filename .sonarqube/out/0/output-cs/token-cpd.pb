ç
SC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Common\Audit.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Common& ,
;, -
public 
partial 
class 
Audit 
{ 
public 

Audit 
( 
Id 
id 
) 
{ 
Id		 

=		 
id		 
;		 
}

 
public 

Id 
Id 
{ 
get 
; 
private 
set  #
;# $
}% &
public 

Availability 
? 
Availability %
{& '
get( +
;+ ,
private- 4
set5 8
;8 9
}: ;
public 

CreatedDate 
? 
CreatedDate #
{$ %
get& )
;) *
private+ 2
set3 6
;6 7
}8 9
public 

string 
? 
CreatedByUser  
{! "
get# &
;& '
private( /
set0 3
;3 4
}5 6
public 

LastModifiedDate 
? 
LastModifiedDate -
{. /
get0 3
;3 4
private5 <
set= @
;@ A
}B C
public 

string 
? 
LastModifiedByUser %
{& '
get( +
;+ ,
private- 4
set5 8
;8 9
}: ;
public 

void 
SetAvailability 
(  
Availability  ,
?, -
availability. :
): ;
{ 
Availability 
= 
availability #
;# $
} 
public 

void 
SetCreatedDate 
( 
CreatedDate *
?* +
createdDate, 7
)7 8
{ 
CreatedDate 
= 
createdDate !
;! "
} 
public 

void 
SetCreatedByUser  
(  !
string! '
createdByUser( 5
)5 6
{ 
CreatedByUser 
= 
createdByUser %
;% &
}   
public"" 

void"" 
SetLastModifiedDate"" #
(""# $
LastModifiedDate""$ 4
modifiedDate""5 A
)""A B
{## 
LastModifiedDate$$ 
=$$ 
modifiedDate$$ '
;$$' (
}%% 
public'' 

void'' !
SetLastModifiedByUser'' %
(''% &
string''& ,
lastModifiedByUser''- ?
)''? @
{(( 
LastModifiedByUser)) 
=)) 
lastModifiedByUser)) /
;))/ 0
}** 
}++ —
]C:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Helpers\DateTimeHelper.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Helpers& -
;- .
internal 
static	 
class 
DateTimeHelper $
{ 
internal 
static 
DateTimeOffset "
GetDateAndTime# 1
(1 2
)2 3
{ 
TimeZoneInfo 
timeZoneInfo !
=" #
TimeZoneInfo$ 0
.0 1"
FindSystemTimeZoneById1 G
(G H
$strH b
)b c
;c d
return 
TimeZoneInfo 
. 
ConvertTime '
(' (
DateTimeOffset( 6
.6 7
UtcNow7 =
,= >
timeZoneInfo? K
)K L
;L M
}		 
}

 ﬂ(
eC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\IRepositories\IAsyncRepository.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
IRepositories& 3
;3 4
public 
	interface 
IAsyncRepository !
<! "
T" #
># $
where% *
T+ ,
:- .
class/ 4
{ 
Task 
< 	
IReadOnlyList	 
< 
T 
> 
> 
GetAllAsync &
(& '
)' (
;( )
Task		 
<		 	
IReadOnlyList			 
<		 
T		 
>		 
>		 )
GetAllIgnoreQueryFiltersAsync		 8
(		8 9
)		9 :
;		: ;
Task

 
<

 	
IReadOnlyList

	 
<

 
T

 
>

 
>

 
GetAsync

 #
(

# $

Expression 
< 
Func 
< 
T 
, 
bool 
>  
>  !
?! "
	predicate# ,
), -
;- .
Task 
< 	
IReadOnlyList	 
< 
T 
> 
> 
GetAsync #
(# $

Expression 
< 
Func 
< 
T 
, 
bool 
>  
>  !
?! "
	predicate# ,
=- .
null/ 3
,3 4
Func 
< 

IQueryable 
< 
T 
> 
, 
IOrderedQueryable -
<- .
T. /
>/ 0
>0 1
?1 2
orderBy3 :
=; <
null= A
,A B
string 
? 
includeString 
= 
null  $
,$ %
bool& *
?* +
disableTracking, ;
=< =
true> B
)B C
;C D
Task 
< 	
IReadOnlyList	 
< 
T 
> 
> 
GetAsync #
(# $

Expression 
< 
Func 
< 
T 
, 
bool 
>  
>  !
?! "
	predicate# ,
=- .
null/ 3
,3 4
Func 
< 

IQueryable 
< 
T 
> 
, 
IOrderedQueryable -
<- .
T. /
>/ 0
>0 1
?1 2
orderBy3 :
=; <
null= A
,A B
List 
< 

Expression 
< 
Func 
< 
T 
, 
object  &
>& '
>' (
>( )
?) *
includes+ 3
=4 5
null6 :
,: ;
bool 
? 
disableTracking 
= 
true  $
)$ %
;% &
Task 
< 	
int	 
> 

CountAsync 
( 
ISpecification '
<' (
T( )
>) *
spec+ /
)/ 0
;0 1
Task 
< 	
T	 

>
 
GetIdWithSpec 
( 
ISpecification (
<( )
T) *
>* +
spec, 0
)0 1
;1 2
Task 
< 	
IReadOnlyList	 
< 
T 
? 
> 
> 
GetAllWithSpec *
(* +
ISpecification+ 9
<9 :
T: ;
>; <
spec= A
)A B
;B C
Task 
< 	
bool	 
> 
Exitst 
( 

Expression  
<  !
Func! %
<% &
T& '
,' (
bool) -
>- .
>. /
	predicate0 9
)9 :
;: ;
Task 
< 	
T	 

>
 
GetByIdAsync 
( 
Guid 
id  
)  !
;! "
Task 
AddAsync	 
( 
T 
entity 
) 
; 
Task 
UpdateAsync	 
( 
T 
entity 
) 
; 
Task 
DeleteAsync	 
( 
T 
entity 
) 
; 
void 
Add	 
( 
T 
entity 
) 
; 
void 
Update	 
( 
T 
entity 
) 
; 
void 
Delete	 
( 
T 
entity 
) 
; 
}!! π
`C:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\IRepositories\IUnitOfWork.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
IRepositories& 3
;3 4
public 
	interface 
IUnitOfWork 
: 
IDisposable *
{ 
IAsyncRepository 
< 
TEntity 
> 

Repository (
<( )
TEntity) 0
>0 1
(1 2
)2 3
where4 9
TEntity: A
:B C
classD I
;I J
	ValueTask 
< 
int 
> 
SaveChangesAsync #
(# $
)$ %
;% &
} û
jC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\AcademicLevels\AcademicLevel.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Models& ,
., -
AcademicLevels- ;
;; <
public 
partial 
class 
AcademicLevel "
:# $
Audit% *
{ 
public		 

AcademicLevel		 
(		 
Id		 
id		 
,		 
Name		  $
name		% )
,		) *
string		+ 1
code		2 6
,		6 7
int		8 ;
semesterQuantity		< L
)		L M
:		N O
base

 
(

 
id

 
)

 
{ 
Name 
= 
name 
; 
Code 
= 
code 
; 
SemesterQuantity 
= 
semesterQuantity +
;+ ,
} 
public 

Name 
? 
Name 
{ 
get 
; 
private $
set% (
;( )
}* +
public 

string 
Code 
{ 
get 
; 
private %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
public 

int 
SemesterQuantity 
{  !
get" %
;% &
private' .
set/ 2
;2 3
}4 5
public 

virtual 
ICollection 
< 
AcademicProgram .
>. /
AcademicsPrograms0 A
{B C
getD G
;G H
setI L
;L M
}N O
=P Q
newR U
ListV Z
<Z [
AcademicProgram[ j
>j k
(k l
)l m
;m n
} ë
vC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\AcademicProgramUsers\AcademicProgramUser.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Models& ,
., - 
AcademicProgramUsers- A
;A B
public 
class 
AcademicProgramUser  
:! "
Audit# (
{		 
public

 

AcademicProgramUser

 
(

 
Id

 !
id

" $
,

$ %
Id

& (
idUser

) /
,

/ 0
Id

1 3
idAcademicProgram

4 E
)

E F
:

G H
base 
( 
id 
) 
{ 
IdUser 
= 
idUser 
; 
IdAcademicProgram 
= 
idAcademicProgram ,
;, -
} 
public 

Id 
? 
IdUser 
{ 
get 
; 
private $
set% (
;( )
}* +
public 

Id 
? 
IdAcademicProgram  
{! "
get# &
;& '
private( /
set0 3
;3 4
}5 6
public 

virtual 
AcademicProgram "
?" #'
IdAcademicProgramNavigation$ ?
{@ A
getB E
;E F
privateG N
setO R
;R S
}T U
public 

virtual 
User 
? 
IdUserNavigation )
{* +
get, /
;/ 0
private1 8
set9 <
;< =
}> ?
} ±)
nC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\AcademicsProgram\AcademicProgram.cs
	namespace

 	
MSschool


 
.

 
Application

 
.

 
Domain

 %
.

% &
Models

& ,
.

, -
AcademicsProgram

- =
;

= >
public 
partial 
class 
AcademicProgram $
:% &
Audit' ,
{ 
public 

AcademicProgram 
( 
Id 

id 
, 
Name 
name 
, 
string 
code 
, 
string 
programStatus 
, 
string 
modality 
, 
Id 

idAcademicLevel 
, 
Id 

idAcademicDirector 
, 
Id 

idInstitution 
) 
: 
base  
(  !
id! #
)# $
{ 
Name 
= 
name 
; 
Code 
= 
code 
; 
ProgramStatus 
= 
programStatus $
;$ %
Modality 
= 
modality 
; 
IdAcademicDirector 
= 
idAcademicDirector .
;. /
IdAcademicLevel 
= 
idAcademicLevel (
;( )
IdInstitution 
= 
idInstitution $
;$ %
} 
public!! 

Name!! 
?!! 
Name!! 
{!! 
get!! 
;!! 
private!! $
set!!% (
;!!( )
}!!* +
public## 

string## 
Code## 
{## 
get## 
;## 
private## %
set##& )
;##) *
}##+ ,
=##- .
null##/ 3
!##3 4
;##4 5
public%% 

string%% 
ProgramStatus%% 
{%%  !
get%%" %
;%%% &
private%%' .
set%%/ 2
;%%2 3
}%%4 5
=%%6 7
null%%8 <
!%%< =
;%%= >
public'' 

string'' 
Modality'' 
{'' 
get''  
;''  !
private''" )
set''* -
;''- .
}''/ 0
=''1 2
null''3 7
!''7 8
;''8 9
public)) 

Id)) 
?)) 
IdAcademicLevel)) 
{))  
get))! $
;))$ %
private))& -
set)). 1
;))1 2
}))3 4
public++ 

Id++ 
?++ 
IdAcademicDirector++ !
{++" #
get++$ '
;++' (
private++) 0
set++1 4
;++4 5
}++6 7
public-- 

Id-- 
?-- 
IdInstitution-- 
{-- 
get-- "
;--" #
private--$ +
set--, /
;--/ 0
}--1 2
public00 

virtual00 
User00 (
IdAcademicDirectorNavigation00 4
{005 6
get007 :
;00: ;
private00< C
set00D G
;00G H
}00I J
=00K L
null00M Q
!00Q R
;00R S
public22 

virtual22 
AcademicLevel22  %
IdAcademicLevelNavigation22! :
{22; <
get22= @
;22@ A
private22B I
set22J M
;22M N
}22O P
=22Q R
null22S W
!22W X
;22X Y
public44 

virtual44 
Institution44 #
IdInstitutionNavigation44 6
{447 8
get449 <
;44< =
private44> E
set44F I
;44I J
}44K L
=44M N
null44O S
!44S T
;44T U
public66 

virtual66 
ICollection66 
<66 
Schedule66 '
>66' (
	Schedules66) 2
{663 4
get665 8
;668 9
private66: A
set66B E
;66E F
}66G H
=66I J
new66K N
List66O S
<66S T
Schedule66T \
>66\ ]
(66] ^
)66^ _
;66_ `
public77 

virtual77 
ICollection77 
<77 
AcademicProgramUser77 2
>772 3 
AcademicProgramUsers774 H
{77I J
get77K N
;77N O
private77P W
set77X [
;77[ \
}77] ^
=77_ `
new77a d
List77e i
<77i j
AcademicProgramUser77j }
>77} ~
(77~ 
)	77 Ä
;
77Ä Å
public88 

virtual88 
ICollection88 
<88 '
SubjectOfTheAcademicProgram88 :
>88: ;$
SubjectsAcademicPrograms88< T
{88U V
get88W Z
;88Z [
private88\ c
set88d g
;88g h
}88i j
=88k l
new88m p
List88q u
<88u v(
SubjectOfTheAcademicProgram	88v ë
>
88ë í
(
88í ì
)
88ì î
;
88î ï
}99 …
aC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\Categories\Category.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Models& ,
., -

Categories- 7
;7 8
public 
class 
Category 
: 
Audit 
{ 
public		 

Category		 
(		 
Id

 

id

 
,

 
string 
name 
, 
string 
description 
) 
: 
base "
(" #
id# %
)% &
{ 
Name 
= 
name 
; 
Description 
= 
description !
;! "
} 
private 
Category 
( 
Id 
id 
) 
: 
base "
(" #
id# %
)% &
{ 
} 
public 

string 
? 
Name 
{ 
get 
; 
private &
set' *
;* +
}, -
public 

string 
? 
Description 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 

virtual 
ICollection 
< 
UserCategory +
>+ ,
UserCategories- ;
{< =
get> A
;A B
privateC J
setK N
;N O
}P Q
=R S
newT W
ListX \
<\ ]
UserCategory] i
>i j
(j k
)k l
;l m
public 

static 
class 
Factory 
{ 
public 
static 
Category 
Update %
(% &
Id   
id   
,   
Name!! 
name!! 
,!! 
string"" 
description"" 
,"" 
Availability## 
?## 
availability## &
,##& '
CreatedDate$$ 
?$$ 
createdDate$$ $
)$$$ %
{%% 	
var&& 
category&& 
=&& 
new&& 
Category&& '
(&&' (
id&&( *
)&&* +
{'' 
Name(( 
=(( 
name(( 
.(( 
Value(( !
,((! "
Description)) 
=)) 
description)) )
}** 
;** 
category++ 
.++ 
SetAvailability++ $
(++$ %
availability++% 1
)++1 2
;++2 3
category,, 
.,, 
SetCreatedDate,, #
(,,# $
createdDate,,$ /
),,/ 0
;,,0 1
return-- 
category-- 
;-- 
}.. 	
}// 
}00 ˘
dC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\CourseNotes\CourseNote.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Models& ,
., -
CourseNotes- 8
;8 9
public 
partial 
class 

CourseNote 
:  !
Audit" '
{		 
public

 


CourseNote

 
(

 
Id 

id 
, 
decimal 
percentages 
, 
decimal 
	noteValue 
, 
DateTime 
noteDate 
, 
string 
observation 
, 
Id 

idUser 
, 
Id 

	idTeacher 
, 
Id 

	idSubject 
) 
: 
base 
( 
id 
)  
{ 
Percentages 
= 
percentages !
;! "
	NoteValue 
= 
	noteValue 
; 
NoteDate 
= 
noteDate 
; 
Observation 
= 
observation !
;! "
IdUser 
= 
idUser 
; 
	IdTeacher 
= 
	idTeacher 
; 
	IdSubject 
= 
	idSubject 
; 
} 
public 

decimal 
Percentages 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 

decimal 
	NoteValue 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public!! 

DateTime!! 
NoteDate!! 
{!! 
get!! "
;!!" #
private!!$ +
set!!, /
;!!/ 0
}!!1 2
public## 

string## 
?## 
Observation## 
{##  
get##! $
;##$ %
private##& -
set##. 1
;##1 2
}##3 4
public%% 

Id%% 
?%% 
IdUser%% 
{%% 
get%% 
;%% 
private%% $
set%%% (
;%%( )
}%%* +
public'' 

Id'' 
?'' 
	IdTeacher'' 
{'' 
get'' 
;'' 
private''  '
set''( +
;''+ ,
}''- .
public)) 

Id)) 
?)) 
	IdSubject)) 
{)) 
get)) 
;)) 
private))  '
set))( +
;))+ ,
}))- .
public++ 

virtual++ 
Subject++ 
IdSubjectNavigation++ .
{++/ 0
get++1 4
;++4 5
private++6 =
set++> A
;++A B
}++C D
=++E F
null++G K
!++K L
;++L M
public-- 

virtual-- 
User-- 
IdTeacherNavigation-- +
{--, -
get--. 1
;--1 2
private--3 :
set--; >
;--> ?
}--@ A
=--B C
null--D H
!--H I
;--I J
public// 

virtual// 
User// 
IdUserNavigation// (
{//) *
get//+ .
;//. /
private//0 7
set//8 ;
;//; <
}//= >
=//? @
null//A E
!//E F
;//F G
}00 ¸
bC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\Geolocation\Colombia.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Models& ,
., -
Geolocation- 8
;8 9
public 
class 
Colombia 
: 
Audit 
{ 
public 

Colombia 
( 
Id 
id 
, 
string !
region" (
,( )
int* -
departmentCode. <
,< =
string> D

departmentE O
,O P
intQ T
cityCodeU ]
,] ^
string_ e
cityf j
)j k
:l m
basen r
(r s
ids u
)u v
{		 
Region

 
=

 
region

 
;

 
DepartmentCode 
= 
departmentCode '
;' (

Department 
= 

department 
;  
CityCode 
= 
cityCode 
; 
City 
= 
city 
; 
} 
public 

string 
Region 
{ 
get 
; 
private  '
set( +
;+ ,
}- .
=/ 0
string1 7
.7 8
Empty8 =
;= >
public 

int 
DepartmentCode 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 

string 

Department 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
=3 4
string5 ;
.; <
Empty< A
;A B
public 

int 
CityCode 
{ 
get 
; 
private &
set' *
;* +
}, -
public 

string 
City 
{ 
get 
; 
private %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
} π
fC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\Institutions\Institution.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Models& ,
., -
Institutions- 9
;9 :
public 
partial 
class 
Institution  
:! "
Audit# (
{ 
public		 

Institution		 
(		 
Id

 

id

 
,

 
Name 
? 
name 
, 
string 
email 
, 
string 

department 
, 
string 
departmentCode 
, 
string 
city 
, 
string 
cityCode 
, 
string 
address 
) 
: 
base 
( 
id !
)! "
{ 
Name 
= 
name 
; 
Email 
= 
email 
; 

Department 
= 

department 
;  
DepartmentCode 
= 
departmentCode '
;' (
City 
= 
city 
; 
CityCode 
= 
cityCode 
; 
Address 
= 
address 
; 
} 
public 

Name 
? 
Name 
{ 
get 
; 
private $
set% (
;( )
}* +
public 

string 
Email 
{ 
get 
; 
private &
set' *
;* +
}, -
=. /
null0 4
!4 5
;5 6
public   

string   

Department   
{   
get   "
;  " #
private  $ +
set  , /
;  / 0
}  1 2
=  3 4
null  5 9
!  9 :
;  : ;
public"" 

string"" 
DepartmentCode""  
{""! "
get""# &
;""& '
private""( /
set""0 3
;""3 4
}""5 6
=""7 8
null""9 =
!""= >
;""> ?
public$$ 

string$$ 
City$$ 
{$$ 
get$$ 
;$$ 
private$$ %
set$$& )
;$$) *
}$$+ ,
=$$- .
null$$/ 3
!$$3 4
;$$4 5
public&& 

string&& 
CityCode&& 
{&& 
get&&  
;&&  !
private&&" )
set&&* -
;&&- .
}&&/ 0
=&&1 2
null&&3 7
!&&7 8
;&&8 9
public(( 

string(( 
Address(( 
{(( 
get(( 
;((  
private((! (
set(() ,
;((, -
}((. /
=((0 1
null((2 6
!((6 7
;((7 8
public** 

virtual** 
ICollection** 
<** 
AcademicProgram** .
>**. /
AcademicsPrograms**0 A
{**B C
get**D G
;**G H
private**I P
set**Q T
;**T U
}**V W
=**X Y
new**Z ]
List**^ b
<**b c
AcademicProgram**c r
>**r s
(**s t
)**t u
;**u v
}++ ã
`C:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\Schedules\Schedule.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Models& ,
., -
	Schedules- 6
;6 7
public 
partial 
class 
Schedule 
: 
Audit  %
{ 
public		 

Schedule		 
(		 
Id

 

id

 
,

 
Id 

?
 
idAcademicProgram 
, 
string 
weekday 
, 
DateTime 
? 
	startTime 
, 
DateTime 
? 
endTime 
) 
: 
base !
(! "
id" $
)$ %
{ 
IdAcademicProgram 
= 
idAcademicProgram -
;- .
Weekday 
= 
weekday 
; 
	StartTime 
= 
	startTime 
; 
EndTime 
= 
endTime 
; 
} 
public 

Id 
? 
IdAcademicProgram  
{! "
get# &
;& '
private( /
set0 3
;3 4
}5 6
public 

string 
Weekday 
{ 
get 
;  
private! (
set) ,
;, -
}. /
=0 1
null2 6
!6 7
;7 8
public 

DateTime 
? 
	StartTime 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 

DateTime 
? 
EndTime 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public 

virtual 
AcademicProgram "
?" #'
IdAcademicProgramNavigation$ ?
{@ A
getB E
;E F
privateG N
setO R
;R S
}T U
} ’
ÅC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\SubjectsAcademicProgram\SubjectOfTheAcademicProgram.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Models& ,
., -#
SubjectsAcademicProgram- D
;D E
public 
partial 
class '
SubjectOfTheAcademicProgram 0
:1 2
Audit3 8
{		 
public

 
'
SubjectOfTheAcademicProgram

 &
(

& '
Id 

id 
, 
Id 

?
 
	idSubject 
, 
Id 

?
 
idAcademicProgram 
) 
:  
base! %
(% &
id& (
)( )
{ 
	IdSubject 
= 
	idSubject 
; 
IdAcademicProgram 
= 
idAcademicProgram -
;- .
} 
public 

Id 
? 
	IdSubject 
{ 
get 
; 
private  '
set( +
;+ ,
}- .
public 

Id 
? 
IdAcademicProgram  
{! "
get# &
;& '
private( /
set0 3
;3 4
}5 6
public 

virtual 
AcademicProgram "'
IdAcademicProgramNavigation# >
{? @
getA D
;D E
privateF M
setN Q
;Q R
}S T
=U V
nullW [
![ \
;\ ]
public 

virtual 
Subject 
IdSubjectNavigation .
{/ 0
get1 4
;4 5
private6 =
set> A
;A B
}C D
=E F
nullG K
!K L
;L M
} °
^C:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\Subjects\Subject.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Models& ,
., -
Subjects- 5
;5 6
public

 
partial

 
class

 
Subject

 
:

 
Audit

 $
{ 
public 

Subject 
( 
Id 

id 
, 
Name 
? 
name 
, 
int 
credit 
, 
int 
semester 
, 
string 
? 
preRequisite 
, 
string 
modality 
) 
: 
base 
(  
id  "
)" #
{ 
Name 
= 
name 
; 
Credit 
= 
credit 
; 
Semester 
= 
semester 
; 
PreRequisite 
= 
preRequisite #
;# $
Modality 
= 
modality 
; 
} 
public 

Name 
? 
Name 
{ 
get 
; 
private $
set% (
;( )
}* +
public 

int 
Credit 
{ 
get 
; 
private $
set% (
;( )
}* +
public 

int 
Semester 
{ 
get 
; 
private &
set' *
;* +
}, -
public!! 

string!! 
?!! 
PreRequisite!! 
{!!  !
get!!" %
;!!% &
private!!' .
set!!/ 2
;!!2 3
}!!4 5
public## 

string## 
Modality## 
{## 
get##  
;##  !
private##" )
set##* -
;##- .
}##/ 0
=##1 2
null##3 7
!##7 8
;##8 9
public%% 

virtual%% 
ICollection%% 
<%% 

CourseNote%% )
>%%) *
CourseNotes%%+ 6
{%%7 8
get%%9 <
;%%< =
private%%> E
set%%F I
;%%I J
}%%K L
=%%M N
new%%O R
List%%S W
<%%W X

CourseNote%%X b
>%%b c
(%%c d
)%%d e
;%%e f
public'' 

virtual'' 
ICollection'' 
<'' 
SubjectValue'' +
>''+ ,
SubjectValues''- :
{''; <
get''= @
;''@ A
private''B I
set''J M
;''M N
}''O P
=''Q R
new''S V
List''W [
<''[ \
SubjectValue''\ h
>''h i
(''i j
)''j k
;''k l
public)) 

virtual)) 
ICollection)) 
<)) '
SubjectOfTheAcademicProgram)) :
>)): ;$
SubjectsAcademicPrograms))< T
{))U V
get))W Z
;))Z [
private))\ c
set))d g
;))g h
}))i j
=))k l
new))m p
List))q u
<))u v(
SubjectOfTheAcademicProgram	))v ë
>
))ë í
(
))í ì
)
))ì î
;
))î ï
public++ 

virtual++ 
ICollection++ 
<++ 
UserAssignment++ -
>++- .
UserAssignments++/ >
{++? @
get++A D
;++D E
private++F M
set++N Q
;++Q R
}++S T
=++U V
new++W Z
List++[ _
<++_ `
UserAssignment++` n
>++n o
(++o p
)++p q
;++q r
},, ·
lC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\UserAssignments\UserAssignment.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Models& ,
., -
UserAssignments- <
;< =
public 
partial 
class 
UserAssignment #
:$ %
Audit& +
{		 
public

 

UserAssignment

 
(

 
Id 

id 
, 
Id 

?
 
idUser 
, 
Id 

?
 
	idSubject 
, 
string 
? 
subjectStatus 
) 
:  
base! %
(% &
id& (
)( )
{ 
IdUser 
= 
idUser 
; 
	IdSubject 
= 
	idSubject 
; 
SubjectStatus 
= 
subjectStatus %
;% &
} 
public 

Id 
? 
IdUser 
{ 
get 
; 
private $
set% (
;( )
}* +
public 

Id 
? 
	IdSubject 
{ 
get 
; 
private  '
set( +
;+ ,
}- .
public 

string 
? 
SubjectStatus  
{! "
get# &
;& '
private( /
set0 3
;3 4
}5 6
public 

virtual 
Subject 
? 
IdSubjectNavigation /
{0 1
get2 5
;5 6
private7 >
set? B
;B C
}D E
public 

virtual 
User 
? 
IdUserNavigation )
{* +
get, /
;/ 0
private1 8
set9 <
;< =
}> ?
} ˘
iC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\UserCategories\UserCategory.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Models& ,
., -
UserCategories- ;
;; <
public 
partial 
class 
UserCategory !
:" #
Audit$ )
{		 
public

 

UserCategory

 
(

 
Id 

id 
, 
Id 

?
 

idCategory 
, 
Id 

?
 
idUser 
) 
: 
base 
( 
id 
) 
{ 

IdCategory 
= 

idCategory 
;  
IdUser 
= 
idUser 
; 
} 
public 

Id 
? 

IdCategory 
{ 
get 
;  
private! (
set) ,
;, -
}. /
public 

Id 
? 
IdUser 
{ 
get 
; 
private $
set% (
;( )
}* +
public 

virtual 
Category 
?  
IdCategoryNavigation 1
{2 3
get4 7
;7 8
private9 @
setA D
;D E
}F G
public 

virtual 
User 
? 
IdUserNavigation )
{* +
get, /
;/ 0
private1 8
set9 <
;< =
}> ?
} ä
[C:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\Users\Address.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Models& ,
., -
Users- 2
;2 3
public 
class 
Address 
{ 
public 

Address 
( 
) 
{ 
}

 
public 

Address 
( 
string 
country 
, 
string 
countryCode 
, 
string 

department 
, 
string 
departmentCode 
, 
string 
city 
, 
string 
cityCode 
, 
string 
	direction 
) 
{ 
Country 
= 
country 
; 
CountryCode 
= 
countryCode !
;! "

Department 
= 

department 
;  
DepartmentCode 
= 
departmentCode '
;' (
City 
= 
city 
; 
CityCode 
= 
cityCode 
; 
	Direction 
= 
	direction 
; 
} 
public 

string 
Country 
{ 
get 
;  
private! (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 

string 
CountryCode 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
=4 5
string6 <
.< =
Empty= B
;B C
public 

string 

Department 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
=3 4
string5 ;
.; <
Empty< A
;A B
public   

string   
DepartmentCode    
{  ! "
get  # &
;  & '
private  ( /
set  0 3
;  3 4
}  5 6
=  7 8
string  9 ?
.  ? @
Empty  @ E
;  E F
public!! 

string!! 
City!! 
{!! 
get!! 
;!! 
private!! %
set!!& )
;!!) *
}!!+ ,
=!!- .
string!!/ 5
.!!5 6
Empty!!6 ;
;!!; <
public"" 

string"" 
CityCode"" 
{"" 
get""  
;""  !
private""" )
set""* -
;""- .
}""/ 0
=""1 2
string""3 9
.""9 :
Empty"": ?
;""? @
public## 

string## 
	Direction## 
{## 
get## !
;##! "
private### *
set##+ .
;##. /
}##0 1
=##2 3
string##4 :
.##: ;
Empty##; @
;##@ A
}$$ ÙT
XC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\Users\User.cs
	namespace		 	
MSschool		
 
.		 
Application		 
.		 
Domain		 %
.		% &
Models		& ,
.		, -
Users		- 2
;		2 3
public 
partial 
class 
User 
: 
Audit !
{ 
public 

User 
( 
Id 

id 
, 
string 
	firstName 
, 
string 
? 

secondName 
, 
string 
surname 
, 
string 
? 
secondSurname 
, 
string 
documentType 
, 
string 
documentNumber 
, 
string 
email 
, 
string 
? 
phone 
, 
DateTime 
? 
	birthdate 
, 
string 
? 
	cellPhone 
) 
: 
base !
(! "
id" $
)$ %
{ 
	FirstName 
= 
	firstName 
; 

SecondName 
= 

secondName 
;  
Surname 
= 
surname 
; 
SecondSurname 
= 
secondSurname %
;% &
DocumentType 
= 
documentType #
;# $
DocumentNumber 
= 
documentNumber '
;' (
Email   
=   
email   
;   
Phone!! 
=!! 
phone!! 
;!! 
	Birthdate"" 
="" 
	birthdate"" 
;"" 
	CellPhone## 
=## 
	cellPhone## 
;## 
AddressOfBirth$$ 
=$$ 
new$$ 
($$ 
)$$ 
;$$ 
AddressCurrent%% 
=%% 
new%% 
(%% 
)%% 
;%% 
}&& 
private(( 
User(( 
((( 
Id(( 
id(( 
)(( 
:(( 
base(( 
((( 
id(( !
)((! "
{)) 
}++ 
public-- 

string-- 
	FirstName-- 
{-- 
get-- !
;--! "
private--# *
set--+ .
;--. /
}--0 1
=--2 3
string--4 :
.--: ;
Empty--; @
;--@ A
public// 

string// 
?// 

SecondName// 
{// 
get//  #
;//# $
private//% ,
set//- 0
;//0 1
}//2 3
public11 

string11 
Surname11 
{11 
get11 
;11  
private11! (
set11) ,
;11, -
}11. /
=110 1
string112 8
.118 9
Empty119 >
;11> ?
public33 

string33 
?33 
SecondSurname33  
{33! "
get33# &
;33& '
private33( /
set330 3
;333 4
}335 6
public55 

string55 
DocumentType55 
{55  
get55! $
;55$ %
private55& -
set55. 1
;551 2
}553 4
=555 6
string557 =
.55= >
Empty55> C
;55C D
public77 

string77 
DocumentNumber77  
{77! "
get77# &
;77& '
private77( /
set770 3
;773 4
}775 6
=777 8
string779 ?
.77? @
Empty77@ E
;77E F
public99 

string99 
Email99 
{99 
get99 
;99 
private99 &
set99' *
;99* +
}99, -
=99. /
string990 6
.996 7
Empty997 <
;99< =
public;; 

string;; 
?;; 
Phone;; 
{;; 
get;; 
;;; 
private;;  '
set;;( +
;;;+ ,
};;- .
public== 

DateTime== 
?== 
	Birthdate== 
{==  
get==! $
;==$ %
private==& -
set==. 1
;==1 2
}==3 4
public?? 

string?? 
??? 
	CellPhone?? 
{?? 
get?? "
;??" #
private??$ +
set??, /
;??/ 0
}??1 2
publicAA 

AddressAA 
?AA 
AddressOfBirthAA "
{AA# $
getAA% (
;AA( )
privateAA* 1
setAA2 5
;AA5 6
}AA7 8
publicCC 

AddressCC 
?CC 
AddressCurrentCC "
{CC# $
getCC% (
;CC( )
privateCC* 1
setCC2 5
;CC5 6
}CC7 8
publicEE 

virtualEE 
ICollectionEE 
<EE 
AcademicProgramUserEE 2
>EE2 3 
AcademicProgramUsersEE4 H
{EEI J
getEEK N
;EEN O
privateEEP W
setEEX [
;EE[ \
}EE] ^
=EE_ `
newEEa d
ListEEe i
<EEi j
AcademicProgramUserEEj }
>EE} ~
(EE~ 
)	EE Ä
;
EEÄ Å
publicGG 

virtualGG 
ICollectionGG 
<GG 
AcademicProgramGG .
>GG. /
AcademicsProgramsGG0 A
{GGB C
getGGD G
;GGG H
privateGGI P
setGGQ T
;GGT U
}GGV W
=GGX Y
newGGZ ]
ListGG^ b
<GGb c
AcademicProgramGGc r
>GGr s
(GGs t
)GGt u
;GGu v
publicII 

virtualII 
ICollectionII 
<II 

CourseNoteII )
>II) **
CourseNoteIdTeacherNavigationsII+ I
{IIJ K
getIIL O
;IIO P
privateIIQ X
setIIY \
;II\ ]
}II^ _
=II` a
newIIb e
ListIIf j
<IIj k

CourseNoteIIk u
>IIu v
(IIv w
)IIw x
;IIx y
publicKK 

virtualKK 
ICollectionKK 
<KK 

CourseNoteKK )
>KK) *'
CourseNoteIdUserNavigationsKK+ F
{KKG H
getKKI L
;KKL M
privateKKN U
setKKV Y
;KKY Z
}KK[ \
=KK] ^
newKK_ b
ListKKc g
<KKg h

CourseNoteKKh r
>KKr s
(KKs t
)KKt u
;KKu v
publicMM 

virtualMM 
ICollectionMM 
<MM 
UserAssignmentMM -
>MM- .
UserAssignmentsMM/ >
{MM? @
getMMA D
;MMD E
privateMMF M
setMMN Q
;MMQ R
}MMS T
=MMU V
newMMW Z
ListMM[ _
<MM_ `
UserAssignmentMM` n
>MMn o
(MMo p
)MMp q
;MMq r
publicOO 

virtualOO 
ICollectionOO 
<OO 
UserCategoryOO +
>OO+ ,
UserCategoriesOO- ;
{OO< =
getOO> A
;OOA B
privateOOC J
setOOK N
;OON O
}OOP Q
=OOR S
newOOT W
ListOOX \
<OO\ ]
UserCategoryOO] i
>OOi j
(OOj k
)OOk l
;OOl m
publicQQ 

staticQQ 
classQQ 
FactoryQQ 
{RR 
publicSS 
staticSS 
UserSS 
AddPlaceOfBirthSS *
(SS* +
IdTT 
idTT 
,TT 
stringUU 
	firstNameUU 
,UU 
stringVV 
?VV 

secondNameVV 
,VV 
stringWW 
surnameWW 
,WW 
stringXX 
?XX 
secondSurnameXX !
,XX! "
stringYY 
documentTypeYY 
,YY  
stringZZ 
documentNumberZZ !
,ZZ! "
string[[ 
email[[ 
,[[ 
string\\ 
?\\ 
phone\\ 
,\\ 
DateTime]] 
?]] 
	birthdate]] 
,]]  
string^^ 
?^^ 
	cellPhone^^ 
,^^ 
string__ 
country__ 
,__ 
string`` 
countryCode`` 
,`` 
stringaa 

departmentaa 
,aa 
stringbb 
departmentCodebb !
,bb! "
stringcc 
citycc 
,cc 
stringdd 
cityCodedd 
,dd 
stringee 
	directionee 
,ee 
Availabilityff 
?ff 
availabilityff &
,ff& '
CreatedDategg 
?gg 
createdDategg $
)gg$ %
{hh 	
varii 
userii 
=ii 
newii 
Userii 
(ii  
idii  "
)ii" #
{jj 
	FirstNamekk 
=kk 
	firstNamekk %
,kk% &

SecondNamell 
=ll 

secondNamell '
,ll' (
Surnamemm 
=mm 
surnamemm !
,mm! "
SecondSurnamenn 
=nn 
secondSurnamenn  -
,nn- .
DocumentTypeoo 
=oo 
documentTypeoo +
,oo+ ,
DocumentNumberpp 
=pp  
documentNumberpp! /
,pp/ 0
Emailqq 
=qq 
emailqq 
,qq 
Phonerr 
=rr 
phonerr 
,rr 
	Birthdatess 
=ss 
	birthdatess %
,ss% &
	CellPhonett 
=tt 
	cellPhonett %
,tt% &
AddressOfBirthuu 
=uu  
newuu! $
Addressuu% ,
(uu, -
countryuu- 4
,uu4 5
countryCodeuu6 A
,uuA B

departmentuuC M
,uuM N
departmentCodeuuO ]
,uu] ^
cityuu_ c
,uuc d
cityCodeuue m
,uum n
	directionuuo x
)uux y
,uuy z
}vv 
;vv 
userww 
.ww 
SetAvailabilityww  
(ww  !
availabilityww! -
)ww- .
;ww. /
userxx 
.xx 
SetCreatedDatexx 
(xx  
createdDatexx  +
)xx+ ,
;xx, -
returnyy 
useryy 
;yy 
}zz 	
}{{ 
}|| —
mC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Models\ValueOfTheSubjects\SubjectValue.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Models& ,
., -
ValueOfTheSubjects- ?
;? @
public 
partial 
class 
SubjectValue !
:" #
Audit$ )
{ 
public		 

SubjectValue		 
(		 
Id

 

id

 
,

 
string 
year 
, 
double 
value 
, 
int 
? 
iva 
, 
Id 

?
 
	idSubject 
) 
: 
base 
( 
id  
)  !
{ 
Year 
= 
year 
; 
Value 
= 
value 
; 
Iva 
= 
iva 
; 
	IdSubject 
= 
	idSubject 
; 
} 
public 

string 
Year 
{ 
get 
; 
private %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
public 

double 
Value 
{ 
get 
; 
private &
set' *
;* +
}, -
public 

int 
? 
Iva 
{ 
get 
; 
private "
set# &
;& '
}( )
public 

Id 
? 
	IdSubject 
{ 
get 
; 
private  '
set( +
;+ ,
}- .
public 

virtual 
Subject 
IdSubjectNavigation .
{/ 0
get1 4
;4 5
private6 =
set> A
;A B
}C D
=E F
nullG K
!K L
;L M
} Õ
lC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Shared\Pagination\PaginationBaseQuery.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Shared& ,
., -

Pagination- 7
;7 8
public 
class 
PaginationBaseQuery  
:! "
SpecificationParams# 6
{ 
} ˝

kC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Shared\Pagination\PaginationResponse.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Shared& ,
., -

Pagination- 7
;7 8
public 
class 
PaginationResponse 
<  
T  !
>! "
where# (
T) *
:+ ,
class- 2
{ 
public 

int 
Count 
{ 
get 
; 
set 
;  
}! "
public 

int 
	PageIndex 
{ 
get 
; 
set  #
;# $
}% &
public 

int 
PageSize 
{ 
get 
; 
set "
;" #
}$ %
public 

IReadOnlyList 
< 
T 
> 
Data  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
default1 8
!8 9
;9 :
public		 

int		 
	PageCount		 
{		 
get		 
;		 
set		  #
;		# $
}		% &
}

 ‹(
nC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Shared\Specifications\BaseSpecification.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Shared& ,
., -
Specifications- ;
;; <
public 
class 
BaseSpecification 
< 
T  
>  !
:" #
ISpecification$ 2
<2 3
T3 4
>4 5
{ 
public 

BaseSpecification 
( 
) 
{ 
}

 
public 

BaseSpecification 
( 

Expression '
<' (
Func( ,
<, -
T- .
,. /
bool0 4
>4 5
>5 6
criteria7 ?
)? @
{ 
Criteria 
= 
criteria 
; 
} 
public 


Expression 
< 
Func 
< 
T 
, 
bool "
>" #
># $
Criteria% -
{. /
get0 3
;3 4
}5 6
public 

List 
< 

Expression 
< 
Func 
<  
T  !
,! "
object# )
>) *
>* +
>+ ,
Includes- 5
{6 7
get8 ;
;; <
}= >
=? @
newA D
ListE I
<I J

ExpressionJ T
<T U
FuncU Y
<Y Z
TZ [
,[ \
object] c
>c d
>d e
>e f
(f g
)g h
;h i
public 


Expression 
< 
Func 
< 
T 
, 
object $
>$ %
>% &
OrderBy' .
{/ 0
get1 4
;4 5
private6 =
set> A
;A B
}C D
=E F
defaultG N
!N O
;O P
public 


Expression 
< 
Func 
< 
T 
, 
object $
>$ %
>% &
OrderByDesc' 2
{3 4
get5 8
;8 9
private: A
setB E
;E F
}G H
=I J
defaultK R
!R S
;S T
public 

bool 
IgnoreQueryFilters "
{# $
get% (
;( )
private* 1
set2 5
;5 6
}7 8
public 

int 
Take 
{ 
get 
; 
private "
set# &
;& '
}( )
public 

int 
Skip 
{ 
get 
; 
private "
set# &
;& '
}( )
public 

bool 
IsPagingEnable 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
	protected 
void 

AddInclude 
( 

Expression (
<( )
Func) -
<- .
T. /
,/ 0
object1 7
>7 8
>8 9
includeExpression: K
)K L
{ 
Includes 
. 
Add 
( 
includeExpression &
)& '
;' (
} 
	protected 
void 

AddOrderBy 
( 

Expression (
<( )
Func) -
<- .
T. /
,/ 0
object1 7
>7 8
>8 9
orderByExpression: K
)K L
{ 
OrderBy 
= 
orderByExpression #
;# $
}   
	protected!! 
void!! 
AddOrderByDesc!! !
(!!! "

Expression!!" ,
<!!, -
Func!!- 1
<!!1 2
T!!2 3
,!!3 4
object!!5 ;
>!!; <
>!!< =
orderByExpression!!> O
)!!O P
{"" 
OrderByDesc## 
=## 
orderByExpression## '
;##' (
}$$ 
	protected%% 
void%% 
ApplyPaging%% 
(%% 
int%% "
skip%%# '
,%%' (
int%%) ,
take%%- 1
)%%1 2
{&& 
Skip'' 
='' 
skip'' 
;'' 
Take(( 
=(( 
take(( 
;(( 
IsPagingEnable)) 
=)) 
true)) 
;)) 
}** 
	protected++ 
void++ !
AddIgnoreQueryFilters++ (
(++( )
bool++) -
filter++. 4
)++4 5
{,, 
IgnoreQueryFilters-- 
=-- 
filter-- #
;--# $
}.. 
}//  
kC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Shared\Specifications\ISpecification.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Shared& ,
., -
Specifications- ;
;; <
public 
	interface 
ISpecification 
<  
T  !
>! "
{ 

Expression 
< 
Func 
< 
T 
, 
bool 
> 
> 
Criteria &
{' (
get) ,
;, -
}. /
List 
< 	

Expression	 
< 
Func 
< 
T 
, 
object "
>" #
># $
>$ %
Includes& .
{/ 0
get1 4
;4 5
}6 7

Expression		 
<		 
Func		 
<		 
T		 
,		 
object		 
>		 
>		 
OrderBy		  '
{		( )
get		* -
;		- .
}		/ 0

Expression

 
<

 
Func

 
<

 
T

 
,

 
object

 
>

 
>

 
OrderByDesc

  +
{

, -
get

. 1
;

1 2
}

3 4
bool 
IgnoreQueryFilters	 
{ 
get !
;! "
}# $
int 
Take 
{ 
get 
; 
} 
int 
Skip 
{ 
get 
; 
} 
bool 
IsPagingEnable	 
{ 
get 
; 
}  
} ‚
pC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\Shared\Specifications\SpecificationParams.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
Shared& ,
., -
Specifications- ;
;; <
public 
abstract 
class 
SpecificationParams )
{ 
private 
const 
int 
maxPageSize !
=" #
$num$ &
;& '
private 
int 
pageSize 
= 
$num 
; 
public 

string 
? 
Sort 
{ 
get 
; 
set "
;" #
}$ %
public		 

string		 
?		 
Search		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
public

 

int

 
	PageIndex

 
{

 
get

 
;

 
set

  #
;

# $
}

% &
=

' (
$num

) *
;

* +
public 

bool  
DisableGlobalFilters $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 

int 
PageSize 
{ 
get 
=> 
pageSize 
; 
set 
=> 
pageSize 
= 
value 
>  !
maxPageSize" -
?. /
maxPageSize0 ;
:< =
value> C
;C D
} 
} §
aC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\ValuesObjects\Availability.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
ValuesObjects& 3
;3 4
public 
record 
Availability 
( 
bool 
Value  %
)% &
;& '—	
`C:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\ValuesObjects\CreatedDate.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
ValuesObjects& 3
;3 4
public 
record 
CreatedDate 
{ 
private 
CreatedDate 
( 
DateTime  
value! &
)& '
=>( *
Value 
= 
value 
; 
public

 

DateTime

 
Value

 
{

 
get

 
;

  
private

! (
set

) ,
;

, -
}

. /
public 

static 
CreatedDate 
CreationDate *
(* +
)+ ,
{ 
var 
date 
= 
DateTimeHelper !
.! "
GetDateAndTime" 0
(0 1
)1 2
;2 3
return 
new 
CreatedDate 
( 
date #
.# $
DateTime$ ,
), -
;- .
} 
} 
; ê
WC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\ValuesObjects\Id.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
ValuesObjects& 3
;3 4
public 
record 
Id 
( 
Guid 
Value 
) 
; «	
eC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\ValuesObjects\LastModifiedDate.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
ValuesObjects& 3
;3 4
public 
record 
LastModifiedDate 
{ 
private 
LastModifiedDate 
( 
DateTime %
value& +
)+ ,
=>- /
Value 
= 
value 
; 
public

 

DateTime

 
Value

 
{

 
get

 
;

  
init

! %
;

% &
}

' (
public 

static 
LastModifiedDate "
CreationDate# /
(/ 0
)0 1
{ 
var 
date 
= 
DateTimeHelper !
.! "
GetDateAndTime" 0
(0 1
)1 2
;2 3
return 
new 
LastModifiedDate #
(# $
date$ (
.( )
DateTime) 1
)1 2
;2 3
} 
} ¡	
YC:\Users\Jhonatan\source\repos\msschool\MSschool.Application.Domain\ValuesObjects\Name.cs
	namespace 	
MSschool
 
. 
Application 
. 
Domain %
.% &
ValuesObjects& 3
;3 4
public 
record 
Name 
{ 
private 
const 
StringComparison "
ordinalIgnoreCase# 4
=5 6
StringComparison7 G
.G H
OrdinalIgnoreCaseH Y
;Y Z
public 

Name 
( 
string 
value 
) 
{ 
Value		 
=		 
value		 
;		 
}

 
public 

string 
Value 
{ 
get 
; 
init #
;# $
}% &
public 

bool 
Contains 
( 
string 
contain  '
)' (
{ 
return 
Value 
. 
Contains 
( 
contain %
)% &
;& '
} 
} 